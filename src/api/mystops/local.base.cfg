[DEFAULT]
PACKAGE = "mystops"

DEBUG = false
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
DOTENV_PATH = null
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
ROOT_URLCONF = "{{ PACKAGE }}.urls"
WSGI_APPLICATION = "{{ PACKAGE }}.wsgi.application"

INSTALLED_APPS = [
        "django.contrib.admin",
        "django.contrib.auth",
        "django.contrib.contenttypes",
        "django.contrib.sessions",
        "django.contrib.messages",
        "django.contrib.staticfiles",
        "django.contrib.gis",
        ; Package
        "{{ PACKAGE }}",
        "{{ PACKAGE }}.apps.stops",
        "{{ PACKAGE }}.apps.routes",
    ]

MIDDLEWARE = [
        "django.middleware.security.SecurityMiddleware",
        "django.contrib.sessions.middleware.SessionMiddleware",
        "django.middleware.common.CommonMiddleware",
        "django.middleware.csrf.CsrfViewMiddleware",
        "django.contrib.auth.middleware.AuthenticationMiddleware",
        "django.contrib.messages.middleware.MessageMiddleware",
        "django.middleware.clickjacking.XFrameOptionsMiddleware",
    ]

TEMPLATES = [
        {
            "BACKEND": "django.template.backends.django.DjangoTemplates",
            "DIRS": [],
            "APP_DIRS": true,
            "OPTIONS": {
                "context_processors": [
                    "django.template.context_processors.debug",
                    "django.template.context_processors.request",
                    "django.contrib.auth.context_processors.auth",
                    "django.contrib.messages.context_processors.messages",
                ]
            }
        }
    ]

LANGUAGE_CODE = "en-us"
TIME_ZONE = "America/Los_Angeles"
USE_I18N = true
USE_L10N = true
USE_TZ = true

STATIC_ROOT = "./static/"
STATIC_URL = "/api/static/"

AUTH_PASSWORD_VALIDATORS = [
        {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
        {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
        {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
        {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
    ]

; Logging
LOGGING.version = 1
LOGGING.disable_existing_loggers = false
LOGGING.formatters.verbose.style = "{"
LOGGING.formatters.verbose.format = "[{asctime}] {levelname} {pathname}:{lineno} {message}"
LOGGING.formatters.verbose.datefmt = "%d/%b/%Y %H:%M:%S"
LOGGING.handlers.console.class = "logging.StreamHandler"
LOGGING.handlers.console.formatter = "verbose"
LOGGING.handlers.null.class = "logging.NullHandler"
LOGGING.root.handlers = ["console"]
LOGGING.root.level = "WARNING"

[dev]
DEBUG = true
ALLOWED_HOSTS = []

; CORS
APPEND.INSTALLED_APPS = ["corsheaders"]
PREPEND.MIDDLEWARE = ["corsheaders.middleware.CorsMiddleware"]
CORS_ALLOW_ALL_ORIGINS = true

; Logging
LOGGING.handlers.console.level = "DEBUG"
LOGGING.loggers.django.level = "WARNING"
LOGGING.loggers.{{ PACKAGE }}.handlers = ["console"]
LOGGING.loggers.{{ PACKAGE }}.level = "DEBUG"

[test]
LOGGING.disable_existing_loggers = true
LOGGING.root.handlers = ["null"]

[prod]
CACHES.default.BACKEND = "django.core.cache.backends.memcached.PyMemcacheCache"
CACHES.default.LOCATION = "127.0.0.1:11211"

; Aspirational
;EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"

; Logging
; Everything that propagates to the root level and is at the INFO level
; or higher will be logged to the console.
LOGGING.handlers.console.level = "INFO"
LOGGING.root.level = "INFO"
